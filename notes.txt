// const counterOps = { eq: 'ne', ne: 'eq', lt: 'gte', lte: 'gt', gt: 'lte', gte: 'lt', in: 'nin', nin: 'in' };

{
  "select": ["users.name", "orders.total"],
  "from": [
    {
      "table": "users"
    },
    {
      "table": "orders",
      "join": [
        {
          "table": "order_items",
          "on": "orders.id = order_items.order_id"
        }
      ]
    }
  ],
  "where": "users.id = 1",
  "group_by": ["users.name"],
  "having": "sum(orders.total) > 100",
  "order_by": [
    {
      "field": "users.name",
      "direction": "asc"
    }
  ],
  "limit": 10,
  "offset": 0
}

// return args.flat().map((arg) => {
//   return Object.entries(Flat.flatten(arg, { safe: true })).reduce((arr, [key, value]) => {
//     let op;
//     [key, op = 'eq'] = key.split('.$');
//     // if (key.startsWith('$not')) return arr.concat(...Quin.where(true, value));
//     if (key.startsWith('$or')) return arr.concat([Quin.where(negate, value)]);
//     if (Array.isArray(value)) op = 'in';
//     // if (negate) op = counterOps[op];
//     return arr.concat({ key, [op]: value });
//   }, []);
// });
